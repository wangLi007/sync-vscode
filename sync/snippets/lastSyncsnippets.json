{"ref":"48c00fab-bf82-4811-ac27-7a4a7351658a","content":"{\"version\":1,\"machineId\":\"8cb0bf32-360b-472e-9a57-f7b1255801a3\",\"content\":\"{\\\"html.json\\\":\\\"{\\\\n  // Place your snippets for html here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\\\n  // same ids are connected.\\\\n  // Example:\\\\n  // \\\\\\\"Print to console\\\\\\\": {\\\\n  // \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n  // \\\\t\\\\\\\"body\\\\\\\": [\\\\n  // \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n  // \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n  // \\\\t],\\\\n  // \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n  // }\\\\n  //<meta name=\\\\\\\"viewport\\\\\\\" content=\\\\\\\"width=device-width,initial-scale=1.0,maximum-scale=1,minimum-scale=1,user-sralable=no\\\\\\\"> \\\\n  \\\\\\\"vh\\\\\\\": {\\\\n    \\\\\\\"prefix\\\\\\\": \\\\\\\"vh\\\\\\\", //触发的关键字  输入vh按下tab键\\\\n    \\\\\\\"body\\\\\\\": [\\\\n      \\\\\\\"<!DOCTYPE html>\\\\\\\",\\\\n      \\\\\\\"<html lang=\\\\\\\\\\\\\\\"en\\\\\\\\\\\\\\\">\\\\\\\",\\\\n      \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"<head>\\\\\\\",\\\\n      \\\\\\\"    <meta charset=\\\\\\\\\\\\\\\"UTF-8\\\\\\\\\\\\\\\">\\\\\\\",\\\\n      \\\\\\\"    <meta name=\\\\\\\\\\\\\\\"viewport\\\\\\\\\\\\\\\" content=\\\\\\\\\\\\\\\"width=device-width,initial-scale=1.0\\\\\\\\\\\\\\\",maximum-scale=1,minimum-scale=1,user-sralable=no\\\\\\\\\\\\\\\">\\\\\\\",\\\\n      \\\\\\\"\\\\\\\\/\\\\\\\\/标准理想视口\\\\\\\",\\\\n      \\\\\\\"    <meta http-equiv=\\\\\\\\\\\\\\\"X-UA-Compatible\\\\\\\\\\\\\\\"content=\\\\\\\\\\\\\\\"ie=edge\\\\\\\\\\\\\\\"> \\\\\\\",\\\\n      \\\\\\\"    <title>Document</title>\\\\\\\",\\\\n      \\\\\\\"    <script src=\\\\\\\\\\\\\\\"./lib/vue-2.4.0.js\\\\\\\\\\\\\\\"></script>\\\\\\\",\\\\n      \\\\\\\"    </head>\\\\\\\",\\\\n      \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"<body>\\\\\\\",\\\\n      \\\\\\\"    <div id=\\\\\\\\\\\\\\\"app\\\\\\\\\\\\\\\"></div>\\\\\\\",\\\\n      \\\\\\\"    <script>\\\\\\\",\\\\n      \\\\\\\"        var vm=new Vue({\\\\\\\",\\\\n      \\\\\\\"            el:'#app',\\\\\\\",\\\\n      \\\\\\\"            data:{},\\\\\\\",\\\\n      \\\\\\\"        })\\\\\\\",\\\\n      \\\\\\\"    </script>\\\\\\\",\\\\n      \\\\\\\"</body>\\\\\\\",\\\\n      \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"</html>\\\\\\\",\\\\n    ],\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"vh components理想视口 移动端用的\\\\\\\"\\\\n  }\\\\n}\\\",\\\"javascript.json\\\":\\\"{\\\\n\\\\t// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t// \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t// \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t// \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t// \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t// \\\\t],\\\\n\\\\t// \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t// }\\\\n\\\\t\\\\\\\"箭头函数快捷方式\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"fn\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t\\\\t\\\\t\\\\\\\"($1)=>{\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"\\\\\\\",\\\\n\\\\t\\\\t\\\\t\\\\\\\"}\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"描述箭头快捷方式\\\\\\\"\\\\n\\\\t},\\\\n\\\\t// \\\\\\\"emmet.syntaxProfiles\\\\\\\": {\\\\n    //     \\\\\\\"vue-html\\\\\\\": \\\\\\\"html\\\\\\\",\\\\n    //     \\\\\\\"vue\\\\\\\": \\\\\\\"html\\\\\\\"\\\\n    // },\\\\n    // \\\\\\\"emmet.includeLanguages\\\\\\\": {\\\\n    //     \\\\\\\"vue-html\\\\\\\": \\\\\\\"html\\\\\\\",\\\\n    //     \\\\\\\"vue\\\\\\\": \\\\\\\"html\\\\\\\"\\\\n    // }\\\\n}\\\\t\\\\n\\\",\\\"javascriptreact.json\\\":\\\"{\\\\n\\\\t// Place your snippets for javascriptreact here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t// \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t// \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t// \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t// \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t// \\\\t],\\\\n\\\\t// \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t// }\\\\n}\\\",\\\"json.json\\\":\\\"{\\\\n\\\\t// Place your snippets for json here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t// \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t// \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t// \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t// \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t// \\\\t],\\\\n\\\\t// \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t// }\\\\n}\\\",\\\"my.vue.code-snippets\\\":\\\"{\\\\n\\\\t// Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and \\\\n\\\\t// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope \\\\n\\\\t// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is \\\\n\\\\t// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: \\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. \\\\n\\\\t// Placeholders with the same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t// \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t// \\\\t\\\\\\\"scope\\\\\\\": \\\\\\\"javascript,typescript\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t// \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t// \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t// \\\\t],\\\\n\\\\t// \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t// }\\\\n\\\\n  \\\\t\\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t\\\\t\\\\\\\"scope\\\\\\\": \\\\\\\"javascript,typescript,css,vue,less,scss\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"ellipsis\\\\\\\",\\\\n\\\\t\\\\t\\\\\\\"body\\\\\\\": [\\\\n      \\\\\\\"display: -webkit-box; /** 将对象作为伸缩盒子模型显示 **/\\\\\\\",\\\\n      \\\\\\\"-webkit-box-orient: vertical; /** 设置或检索伸缩盒对象的子元素的排列方式 **/\\\\\\\",\\\\n      \\\\\\\"-webkit-line-clamp: 2; /** 显示的行数 **/\\\\\\\",\\\\n      \\\\\\\"overflow: hidden; /** 隐藏超出的内容 **/\\\\\\\"\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t\\\\\\\"description\\\\\\\": \\\\\\\"es\\\\\\\"\\\\n\\\\t  },\\\\n    \\\\\\\"滚动条动画\\\\\\\": {\\\\n      \\\\\\\"scope\\\\\\\": \\\\\\\"javascript,typescript,vue\\\\\\\",\\\\n      \\\\\\\"prefix\\\\\\\": \\\\\\\"scrollAnimation\\\\\\\",\\\\n      \\\\\\\"body\\\\\\\": [\\\\n        // 切换tab  动画\\\\n        \\\\\\\"scrollAnimation(targetY) {\\\\\\\",\\\\n          \\\\\\\"const activeY =\\\\\\\",\\\\n              \\\\\\\"document.documentElement.scrollTop || document.body.scrollTop;\\\\\\\",\\\\n          \\\\\\\"const clientHeight =\\\\\\\",\\\\n              \\\\\\\"document.documentElement.clientHeight ||\\\\\\\",\\\\n              \\\\\\\"document.body.clientHeight;\\\\\\\",\\\\n          \\\\\\\"const scrollHeight =\\\\\\\",\\\\n              \\\\\\\"document.documentElement.scrollHeight ||\\\\\\\",\\\\n              \\\\\\\"document.body.scrollHeight;\\\\\\\",\\\\n          \\\\\\\"const marginBot = scrollHeight - activeY - clientHeight;\\\\\\\",\\\\n          \\\\\\\"const needScrollTop = targetY - activeY;\\\\\\\",\\\\n          \\\\\\\"let _activeY = activeY;\\\\\\\",\\\\n          \\\\\\\"setTimeout(() => {\\\\\\\",\\\\n              \\\\\\\"const dist = Math.ceil(needScrollTop / 10);\\\\\\\",\\\\n              \\\\\\\"_activeY += dist;\\\\\\\",\\\\n              \\\\\\\"if (needScrollTop > 10 || needScrollTop < -10) {\\\\\\\",\\\\n                  \\\\\\\"window.scrollTo(0, _activeY);\\\\\\\",\\\\n                  \\\\\\\"if (marginBot > 0) {\\\\\\\",\\\\n                      \\\\\\\"this.scrollAnimation(targetY);\\\\\\\",\\\\n                  \\\\\\\"} else {\\\\\\\",\\\\n                      \\\\\\\"this.goTarget(targetY);  window.srollTo(0,100)\\\\\\\",\\\\n                  \\\\\\\"}\\\\\\\",\\\\n              \\\\\\\"} else {\\\\\\\",\\\\n                  \\\\\\\"this.goTarget(targetY);\\\\\\\",\\\\n              \\\\\\\"}\\\\\\\",\\\\n          \\\\\\\"}, 3);\\\\\\\",\\\\n      \\\\\\\"},\\\\\\\"\\\\n      ],\\\\n      \\\\\\\"description\\\\\\\": \\\\\\\"滚动条动画封装\\\\\\\"\\\\n      },\\\\n\\\\n\\\\n}\\\",\\\"less.json\\\":\\\"{\\\\n\\\\t// Place your snippets for less here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t// \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t// \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t// \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t// \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t// \\\\t],\\\\n\\\\t// \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t// }\\\\n}\\\",\\\"css.json\\\":\\\"{\\\\n\\\\t// Place your snippets for css here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t// \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t// \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t// \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t// \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t// \\\\t],\\\\n\\\\t// \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t// }\\\\n}\\\"}\"}"}